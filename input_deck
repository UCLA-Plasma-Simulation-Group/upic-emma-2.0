#######################################################################
#######################################################################
##                                                                   ##
##                      UPIC-EMMA INPUT DECK                         ##
##                                                                   ##
#######################################################################
#######################################################################
#
#######################################################################
#                       Simulation  parameters :                      #
#######################################################################
#                                                                     #
# N_threads     = Number of threads per node used by OPEN_MP (shared  #
#                 memory)                                             #
#                 if N_threads=0, the maximum possible value is used  #
#                                                                     #
# FTFD          = 0 for solving Maxwell eq. with the full spectral    #
#                   solver                                            #
#              or N for emulating a Finite Time Finite Difference Yee #
#                 scheme with an acuracy order N; in this case,       #
#                 N must be a multiple of 2 (<< centered numerical    #
#                 schemes for the computations of derivatives) so     #
#                 that 2*floor(N/2) is actually taken                 #
#                                                                     #
# cfl           = real number between 0. and 1. such that the time    #
#                 step dt = cfl * f(Delta_x,Delta_y) where            #
#                 dt <= f(Delta_x,Delta_y) is the stability condition #
#                                                                     #
# laserpulse    = .true. (to launch a laser pulse) or .false. (not)   #
#                                                                     #
# plasma        = .true.  (to initialize a plasma) or                 #
#                 .false. (to initialize vacuum)                      #
#                                                                     #
# relativistic  = .true. (.false.) for relativistic (non-relativistic)#
#                  computations of macro particle trajectories        #
#                                                                     #
# moving_ions   = .true. (or .false.) to account (or not) for mobile  #
#                  ions                                               #
#                                                                     #
# Delta_x, Delta_y   = spatial cells dimension in units of (Delta)    #
#                                                                     #
# indx, indy         = spatial dimensions of the simulation box       #
#                      along the x and y axis. Pay attention :        #
#                      The number of gridpoints Nx and Ny             #
#                      along x and y axis must be a power of 2 due    #
#                      to the FFT algorithm. We impose so :           #
#                      Nx = 2^indx and Ny = 2^indy where              #
#                      indx = 1 + floor(ln(Lx/Delta_x)/ln(2)) and     #
#                      indy = 1 + floor(ln(Ly/Delta_y)/ln(2))         #
#                      such that Lx = 2^indx and Ly = 2^indy          #
#                      For example, with Delta = 1. :                 #
#                      Lx = 2, 4, 16 , 32, 64, 128, 256, 512, 1024,   #
#                           2048, 4096, 8192, 16384, 32768, 65536,    #
#                           131072, ... with                          # 
#                      indx = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,  #
#                             13, 14, 15, 16, 17, ... respectively    #
#                                                                     #
# t_end         = time at end of simulation, in units of              # 
#                 (/ omega_p) or (/ omega_0) depending on units       #
#                                                                     #
# units         = ES for ElectroStatic units                          #
#                 (space unit = vTe / omega_p = Debye length          #
#                  time  unit = 1   / omega_p = inverse of plasma     #
#                                               Langmuir frequency)	  #
#              or EM for ElectroMagnetic units                        #
#                 (space unit = c / omega_p = plasma skin depth       #
#                  time  unit = 1 / omega_p = inverse of plasma       #
#                                             Langmuir frequency)	  #
#              or LPI for Laser Plasma Interaction units              #
#                 (space unit = c / omega_0                           #
#                             = 1 / laser pulse angular wavenumber    #
#                 (time  unit = 1 / omega_0                           #
#                             = 1 / laser pulse angular frequency)    #
#           where vTe = (kB Te / me)^1/2 is the non                   #
#                        relativistic thermal velocity),              #
#                 omega_p = (4 Pi ne e^2 / me)^1/2 the angular        #
#                            plasma frequency)                        #
#             and omega_0 the laser pulse angular frequency           #
#            with Te the electron temperature                         #
#                 ne the real electron density                        #
#                 me the real electron mass                           #
#                 -e the real electron charge and                     #
#                 kB the Boltzmann constant                           #
#                                                                     #
#######################################################################
#
#N_threads  8
#
#FTFD 4
#
#cfl 0.85
#
#relativistic .true.
#
#moving_ions .false.
#
#laserpulse  .true.
#
#plasma .false.
#
#Delta_x 1.0
#
#Delta_y 5000.0
#
#indx 11
#
#indy 4
#
#t_end  3000.
#
#units EM
#
#######################################################################
#             Plasma properties (useful only if plasma = 1) :         #
#######################################################################
#                                                                     #
# atomic_weight      = plasma atomic weight A (g/mol)                 #
#                                                                     #
# atomic_number      = plasma atomic number Z ()                      #
#                                                                     #
# ionization_state   = plasma ionization state Z* ()                  #
#                                                                     #
# ax/ay          = smoothed particle size in x/y direction            #
#                                                                     #
# den_me         = Number of electrons per macro electron             #
#                                                                     #
# Npic           = Number of macro electrons per spatial cell         #
#                                                                     #
# param          = vTe / c with c the velocity of light in vacuum     #
#                                                                     #
# ptx, pty, ptz  = root mean square electron momentum (relativistic=1)#
#                  or velocity (relativistic = 0) components in the x,#
#                  components in the x, y and z directions resp.      #
#                  in units of ( me ) Delta omega_p                   #
#                  Be careful, since Te = (Te,x + Te,y + Te,z) / 3,   #
#                  vTe = sqrt( (vtx^2 + vty^2 + vtz^2) / 3 )          #
#                  must be respected                                  #
#                                                                     #
# px0, py0, pz0  = mean plasma momentum (relativistic=1) or velocity  #
#                  (relativistic = 0) components in the x, y and z    #
#                  directions resp.                                   #
#                                                                     #
#######################################################################
#
#atomic_weight 26.9815
#
#atomic_number 13.
#
#ionization_state 3.
#
##ax  0.
#ax .912871
#
##ay  0.
#ay .912871
#
#den_me  0.01
#
#Npic    1.
#
#param 1.
#
#ptx    1.
#
#pty    1.
#
#ptz    1.
#
#px0    0.
#
#py0    0.
#
#pz0    0.
#
#######################################################################
#         Laser pulse properties (useful only if laser = 1) :         #
#######################################################################
#                                                                     #    
# propdir  = 1 (x) or 2 (y) = main propagation direction              #
#            (MPI parallelization is done along the y-direction)      #
#                                                                     #
# polardir = polarisation parameter such that -1. <= polardir < 1. :  #
#          _ polardir =     0.  corresponds to a linear polarization  #
#                                           along : _ z (propdir = 1) #
#                                                   _ x (propdir = 2) #
#          _ polardir =   - 1.  correspond to a linear polarization   #
#                                          along : _ y (propdir = 1)  #
#                                                  _ z (propdir = 2)  #
#          _ polardir = +/- 0.5 correspond to a circular polarization #
#          _ polardir =    else correspond to elliptic polarizations  #
#                       polardir > 0 -> clockwise                     #
#                       polardir < 0 -> counterclockwise              #
#                                                                     #
# shape    = 1 (Gaussian wave shape) or 0 (Plane wave)                #
#                                                                     #
# theta    = angle of incidence relative to the 'propdir'-axis        #
#            assuming that shape = 1 (for a plane wave, rotate the    #
#            plasma!!!)                                               #
#            Be careful : theta must be between -45. and 45. so       #
#                                                                     #
# tlaunch  = time at which the laser pulse starts to be launched      #
#            in units of omega^-1                                     #
#                                                                     #
# FWHMt    = time duration Full Width at Half Maximum of the laser    #
#            pulse envelop in units of omega^-1                       #
#                                                                     #
# xfocal/yfocal = focal point coordinates along x and y in units of   #
#                 (Delta) for Gaussian waves                          #
#                                                                     #
# FWHMs    = laser pulse spot size Full Width at Half Maximum at the  #
#            focal point in units of (Delta) for Gaussian waves       #
#            (the laser pulse waist at focal point :                  #
#                           W0 = FWHMx / sqrt(4ln2) )                 #
#                                                                     #
# omega0   = Laser pulse angular frequency in units of (omega)        #
#            -> omega0 = 1. is imposed if units = LPI                 #
#                                                                     #
# a0       = Maximum amplitude of the laser pulse potential vector    #
#            in units of (me Delta omega / e)                         #
#            -> E0 = omega0 * a0 is the maximum amplitude of the      #
#                    laser pulse electric/magnetic field              #
#                                                                     #
#######################################################################
#
#propdir 1
#
#theta 0.
#
#polardir 0.
#
#shape 0
#
#tlaunch 0.
#
#FWHMt 500.
#
#xfocal 64.
#
#yfocal 64.
#
#FWHMs 100000.
#
#omega0 0.5
#
#a0 1.00
#
#######################################################################
#                       Boundary conditions                           #
#######################################################################
#                                                                     #
# BCx = 1 (periodic) or 0 (absorbing)                                 #
#       condition along the x-axis for both particles and fields      #
#                                                                     #
# BCy = 1 (periodic) or 0 (absorbing)                                 #
#       condition along the y-axis for both particles and fields      #
#                                                                     #
# For absorbing cond., the Perfectly Matched Layer (PML) technique    #
#                      is used for the E-M fields (Berenger, 1996) :  #
#                      _ PML_scheme = 0 : Yee scheme                  #
#                        PML_scheme = 1 : Implicit scheme             #
#                      _ L_PML is the PML layer thickness in units    #
#                        of Delta                                     #
#                      _ n_cond_PML is the integer n such that the PML#
#                        electrical and magnetic conductivity read :  #
#                        sigma(x) = sigma_m * (|x-x_I|/L_PML)^n       #
#                        where x_I is the position of the interface   #
#                        between the PML and the effective sim. box.  #
#                        3 < n_cond_PML < 4 is optimal                #
#                                                                     #
#######################################################################
#
#BCx 0
#
#BCy 1
#
#PML_scheme 1
#
#L_PML 20.
#
#n_cond_PML 3.2
#
#######################################################################
#                            Diagnostics :                            #
#######################################################################
#                                                                     #
# Delta_t_diag = results are saved in text files in results/          #
#                every Delta_t_diag in unit of (omega_p or omega0)^-1 #
#                                                                     #
#                                                                     #
#######################################################################
#

#Delta_t_diag 200.
#######################################################################
#                        density profile :                            #
#######################################################################
#                                                                     #
# density_x/y, write down expressions for density along x/y           #
#              directions. The names of coordinate of x is x1         #
#              and y is x2. many math functions and branching         #
#              function are supported.                                #
#                                                                     #
#######################################################################
#

#density_x 0.00001
#density_y 0.00001
